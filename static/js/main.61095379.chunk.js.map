{"version":3,"sources":["Questions.js","App.js","reportWebVitals.js","index.js"],"names":["Questions","props","pushAns","bind","idx","value","this","storeAns","className","id","ques","type","name","onClick","ans","React","Component","App","temp","state","showQuestions","array","ansArray","getQuestions","renderQ","setState","shuffle","myRef","createRef","evaluate","arra1","index","ctr","length","Math","floor","random","api","a","fetch","url","result","json","data","results","x","map","incorrect_answers","push","correct_answer","console","log","count","i","alert","array1","question","ref","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.61095379.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default class Questions extends  React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.pushAns= this.pushAns.bind(this);\r\n    }\r\n    pushAns(idx,value){\r\n        // console.log(value);\r\n        // console.log(idx)\r\n        this.props.storeAns(idx,value);\r\n    }\r\n    \r\n    render(){\r\n    return (<form className=\"demoForm\" id=\"demoForm\">\r\n    <div>{this.props.idx+1}. {this.props.ques}</div>\r\n    <input type=\"radio\"  name={`age${this.props.idx}`} onClick={() => this.pushAns(this.props.idx,this.props.ans[0])} value={this.props.ans[0]}></input>\r\n    <label >{this.props.ans[0]}</label>\r\n    <input type=\"radio\" name={`age${this.props.idx}`}  onClick={() => this.pushAns(this.props.idx,this.props.ans[1])} value={this.props.ans[1]}></input>\r\n    <label >{this.props.ans[1]}</label><br></br>\r\n    <input type=\"radio\" name={`age${this.props.idx}`} onClick={() => this.pushAns(this.props.idx,this.props.ans[2])}  value= {this.props.ans[2]}></input>\r\n    <label >{this.props.ans[2]}</label>\r\n    <input type=\"radio\" name={`age${this.props.idx}`} onClick={() => this.pushAns(this.props.idx,this.props.ans[3])} value={this.props.ans[3]}></input>\r\n    <label >{this.props.ans[3]}</label>\r\n    {/* {console.log(this.props.ref)} */}\r\n    {/* <div>{()=>this.getRadioVal('demoform',`age${this.props.idx}`)}</div> */}\r\n    </form>);\r\n    }\r\n}","// import logo from './logo.svg';\nimport './App.css';\nimport React from \"react\";\nimport Questions from \"./Questions\";\nclass App extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state={showQuestions:false,array:[],ansArray:[]};\n    this.getQuestions= this.getQuestions.bind(this);\n    this.renderQ=this.renderQ.bind(this);\n    this.setState=this.setState.bind(this);\n    this.shuffle= this.shuffle.bind(this);\n    this.myRef = React.createRef();\n    this.storeAns= this.storeAns.bind(this);\n    this.evaluate=this.evaluate.bind(this);\n    \n  };\n   temp=[0,0,0,0,0,0,0,0,0,0];\n  shuffle(arra1) {\n   var ctr = arra1.length, temp, index;\n   // console.log(\"work here\")\n  // While there are elements in the array\n    while (ctr > 0) {\n  // Pick a random index\n        index = Math.floor(Math.random() * ctr);\n  // Decrease ctr by 1\n        ctr--;\n  // And swap the last element with it\n        temp = arra1[ctr];\n        arra1[ctr] = arra1[index];\n        arra1[index] = temp;\n    }\n    \n    return arra1;\n    \n}\n\n  async getQuestions(){\n    const url =\n      \"https://opentdb.com/api.php?amount=10&category=9&difficulty=easy&type=multiple\";\n    async function api() {\n      const  result =  await fetch(url);\n      const data =  await  result.json();\n      // console.log(data); \n      return data.results; \n    }\n    const x= await api();\n    x.map((ques,idx)=>(ques.incorrect_answers.push(ques.correct_answer)));\n  //  console.log(x);\n    this.setState({showQuestions:true,array:x});\n\n  }\n  // stroing ans coming from child\n  storeAns(idx,value){\n     //console.log(typeof idx)\n    \n     const index = (idx);\n    this.temp[index]= value;\n    \n    // this.setState({storeAns:temp})\n    // console.log(this.state.storedAns);\n    // console.log(this.temp);\n  }\n  evaluate(){\n    console.log(this.state.array);\n    const ansArray = this.temp;\n    let count=0;\n    for(let i=0;i<10;i++){\n      if(ansArray[i]===this.state.array[i].correct_answer){\n        count++;\n      }\n    }\n    alert(`Your Score is: ${count}/10`);\n    this.setState({showQuestions:false,array:[],ansArray:[]});\n    this.temp=[0,0,0,0,0,0,0,0,0,0];\n   // console.log(this.temp);\n  }\n  renderQ(){\n    if(this.state.showQuestions){\n      const array1 = [...this.state.array];\n\n      return (<div><div className=\"Questions\">{ array1.map((ques,idx)=>\n        ( <Questions ques={ques.question} key={idx} idx={idx} ref={this.myRef} storeAns={this.storeAns} ans={this.shuffle([...ques.incorrect_answers])}/>\n          ))\n        }<div id=\"but\"> <button type=\"submit\" id=\"button\" onClick={this.evaluate}>Submit test</button></div></div></div>) \n    }\n    else\n      return null;\n  }\n  render(){\n    return (<>\n    <button onClick={this.getQuestions}>Get Questions</button>\n    {this.renderQ()}\n    \n    </>)\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}